{"version":3,"file":"static/js/Cast.d3f468f0.chunk.js","mappings":"uMA2CA,UAnCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBH,GAASI,MAAK,SAAAC,GAAM,OAAIN,GAAQ,OAAIM,EAAOP,YAC/D,CAACE,KAGF,8BACE,wBACGF,GACCA,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACP,2BACE,gBACEC,IACEH,EAAY,UApBV,kCAoBU,YACUA,GAnBtC,0HAsBcI,IAAG,UAAKH,MAEV,uBAAIA,KACJ,uBACiB,KAAdC,EAAA,qBACiBA,GACd,qBAbCH,Y,8ECjBN,SAASM,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/Cast/Cast.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchGetMovieCredits } from '../../services/api';\n\nconst picturePath = 'https://image.tmdb.org/t/p/w200';\nconst pictureDefaultProfile =\n  'https://cdn1.vectorstock.com/i/thumb-large/77/30/default-avatar-profile-icon-grey-photo-placeholder-vector-17317730.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchGetMovieCredits(movieId).then(result => setCast([...result.cast]));\n  }, [movieId]);\n\n  return (\n    <section>\n      <ul>\n        {cast &&\n          cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `${picturePath}/${profile_path}`\n                    : pictureDefaultProfile\n                }\n                alt={`${name}`}\n              ></img>\n              <p>{name}</p>\n              <p>\n                {character !== ''\n                  ? `Character: ${character}`\n                  : 'Character: n/a'}\n              </p>\n            </li>\n          ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Cast;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","cast","setCast","movieId","useParams","useEffect","fetchGetMovieCredits","then","result","map","id","profile_path","name","character","src","alt","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}