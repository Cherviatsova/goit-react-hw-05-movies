{"version":3,"file":"static/js/212.f0bf368b.chunk.js","mappings":"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","sources":["components/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/MovieDetailsPage/MovieDetailsPage.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const GoToBackButton = styled.button`\n    margin-bottom: 10px;\n    margin-left: 5px;\n    padding: 10px;\n    cursor: pointer;\n`;\n\nexport const Container = styled.div`\n    display: flex;\n`;\n\nexport const ContainerInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-left: 20px;\n`;\n\nexport const ContainerNav = styled.nav`\n    margin-top: 15px;\n    border-bottom: 2px solid #C0C0C0;\n    border-top: 2px solid #C0C0C0;\n    padding: 20px;\n`;\n\nexport const TitleNav = styled.div`\n    font-size: 20px;\n`;\n\nexport const Link = styled(NavLink)`\n    margin: 15px 20px;\n    display: flex;\n    color: #000000;\n    &.active {\n        color: #FF0000;\n    }\n`;\n","import { lazy, Suspense, useEffect, useState } from 'react';\nimport {\n  useParams,\n  useRouteMatch,\n  useLocation,\n  useHistory,\n  Route,\n} from 'react-router-dom';\nimport { fetchGetMovieDetails } from '../../services/api';\nimport {\n  GoToBackButton,\n  Container,\n  ContainerInfo,\n  ContainerNav,\n  TitleNav,\n  Link,\n} from './MovieDetailsPage.styled';\n\nconst Cast = lazy(() => import('../Cast/Cast' /* webpackChunkName: \"Cast\" */));\nconst Reviews = lazy(() =>\n  import('../Reviews/Reviews' /* webpackChunkName: \"Reviews\" */)\n);\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const { path } = useRouteMatch();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchGetMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from ?? './movies');\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <GoToBackButton type=\"button\" onClick={onGoBack}>\n            Go back\n          </GoToBackButton>\n          <Container>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n              alt={movie.title}\n              width=\"300\"\n            />\n\n            <ContainerInfo>\n              <h2>{movie.title}</h2>\n              <p>\n                <span>Release date: </span>\n                {movie.release_date}\n              </p>\n              <p>\n                <span>Popularity: </span>\n                {movie.popularity}\n              </p>\n              <p>\n                <span>Overview: </span>\n                {movie.overview}\n              </p>\n              <p>\n                <span>Genres: </span>\n              </p>\n              <ul>\n                {movie.genres.map(genre => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </ul>\n            </ContainerInfo>\n          </Container>\n        </>\n      )}\n      <ContainerNav>\n        <TitleNav>Additional information</TitleNav>\n        <Link\n          to={{ pathname: `/movies/${movieId}/cast`, state: location.state }}\n        >\n          Cast\n        </Link>\n\n        <Link\n          to={{ pathname: `/movies/${movieId}/reviews`, state: location.state }}\n        >\n          Reviews\n        </Link>\n      </ContainerNav>\n\n      <Suspense fallback={<h1>LOADING...</h1>}>\n        <Route path={`${path}/cast`}>\n          <Cast />\n        </Route>\n        <Route path={`${path}/reviews`}>\n          <Reviews />\n        </Route>\n      </Suspense>\n    </>\n  );\n}\n","const KEY = '0a29e3a518908cfc1b2eed264f85542b';\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Nothing found for this query'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n}\n\nexport function fetchSearchMovies(searchQuery) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1`\n  );\n}\n\nexport function fetchGetMovieDetails(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchGetMovieCredits(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchGetMovieReviews(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["GoToBackButton","styled","Container","ContainerInfo","ContainerNav","TitleNav","Link","NavLink","Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","path","useRouteMatch","useState","movie","setMovie","location","useLocation","history","useHistory","useEffect","fetchGetMovieDetails","then","type","onClick","push","state","from","src","poster_path","alt","title","width","release_date","popularity","overview","genres","map","genre","name","id","to","pathname","Suspense","fallback","KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchSearchMovies","searchQuery","movie_id","fetchGetMovieCredits","fetchGetMovieReviews"],"sourceRoot":""}