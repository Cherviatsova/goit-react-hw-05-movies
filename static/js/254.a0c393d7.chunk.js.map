{"version":3,"file":"static/js/254.a0c393d7.chunk.js","mappings":"6NAEaA,E,OAAQC,GAAAA,GAAH,qE,kBCGH,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GACzBJ,EAAaI,EAASC,cAEvB,KAGD,+BACE,SAACV,EAAD,UAAQI,IAAa,SAACO,EAAA,EAAD,CAAWC,KAAMR,U,qFCd/BS,E,OAAOZ,GAAAA,GAAH,uC,SCEF,SAASU,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAC5BE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACF,EAAD,UACGD,GACCA,EAAKI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACP,yBACE,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaJ,GACrBK,MAAO,CAAEC,KAAMT,IAHnB,UAMGK,GAAcD,EACdA,MARID,U,oLCXbO,EAAM,mCACNC,EAAW,8BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQnB,EADR,QAEkBqB,GAFlB,iCAGYrB,EAASsB,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,iCAJ/B,2GAOO,SAAS3B,IACd,OAAOmB,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAIvC,SAASW,EAAkBC,GAChC,OAAOV,EAAuB,GAAD,OACxBD,EADwB,iCACSD,EADT,iCACqCY,EADrC,YAKxB,SAASC,EAAqBC,GACnC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,oBACcd,EADd,oBAKxB,SAASe,EAAqBD,GACnC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACsBd,EADtB,oBAKxB,SAASgB,EAAqBF,GACnC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACsBd,EADtB","sources":["components/HomeView/HomeView.styled.jsx","components/HomeView/HomeView.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n font-size: 24px;\n margin-bottom: 20px;   \n`","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from '../../services/api';\nimport { Title } from './HomeView.styled';\nimport MovieList from '../MovieList/MovieList';\n\nexport default function HomeView() {\n  const [movieList, setMovieList] = useState(null);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(response => {\n      setMovieList(response.results);\n    });\n  }, []);\n\n  return (\n    <>\n      <Title>{movieList && <MovieList list={movieList} />}</Title>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nfont-size: 20px`","import { Link, useLocation } from 'react-router-dom';\nimport { List } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ list }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {list &&\n        list.map(({ id, title, name }) => (\n          <li key={id}>\n            <Link\n              to={{\n                pathname: `/movies/${id}`,\n                state: { from: location },\n              }}\n            >\n              {name ? name : title}\n              {title}\n            </Link>\n          </li>\n        ))}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object),\n};\n","const KEY = '0a29e3a518908cfc1b2eed264f85542b';\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Nothing found for this query'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n}\n\nexport function fetchSearchMovies(searchQuery) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1`\n  );\n}\n\nexport function fetchGetMovieDetails(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchGetMovieCredits(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchGetMovieReviews(movie_id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["Title","styled","HomeView","useState","movieList","setMovieList","useEffect","fetchTrendingMovies","then","response","results","MovieList","list","List","location","useLocation","map","id","title","name","to","pathname","state","from","KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","fetchSearchMovies","searchQuery","fetchGetMovieDetails","movie_id","fetchGetMovieCredits","fetchGetMovieReviews"],"sourceRoot":""}